An execution plan has been generated and is shown below.
Resource actions are indicated with the following symbols:
  ~ update in-place

Terraform will perform the following actions:

  # module.ssui.azurerm_application_gateway.aerserv-prod-eastus-prod-ssui-agw will be updated in-place
  ~ resource "azurerm_application_gateway" "aerserv-prod-eastus-prod-ssui-agw" {
        enable_http2        = false
        firewall_policy_id  = "/subscriptions/XXXX-XXXX/resourceGroups/aerserv-prod-eastus-rg/providers/Microsoft.Network/ApplicationGatewayWebApplicationFirewallPolicies/aerserv-prod-eastus-prod-ssui-agw-wafpolicy2"
        id                  = "/subscriptions/XXXX-XXXX/resourceGroups/aerserv-prod-eastus-rg/providers/Microsoft.Network/applicationGateways/production-ssui-agw"
        location            = "eastus"
        name                = "production-ssui-agw"
        resource_group_name = "aerserv-prod-eastus-rg"
        tags                = {
            "environment" = "prod"
            "name"        = "prod-ssui-agw"
            "product"     = "aerserv"
            "role"        = "ssui"
            "service"     = "prod ssui agw"
            "team"        = "aerserv devops"
            "teamemail"   = "devops@inmobi.com"
        }
        zones               = []

        autoscale_configuration {
            max_capacity = 8
            min_capacity = 2
        }

        backend_address_pool {
            fqdns        = [
                "ssui1001-prod.aerserv.com",
                "ssui1002-prod.aerserv.com",
            ]
            id           = "/subscriptions/XXXX-XXXX/resourceGroups/aerserv-prod-eastus-rg/providers/Microsoft.Network/applicationGateways/production-ssui-agw/backendAddressPools/prod-ssui-port-8080"
            ip_addresses = []
            name         = "prod-ssui-port-8080"
        }

        backend_http_settings {
            cookie_based_affinity               = "Disabled"
            id                                  = "/subscriptions/XXXX-XXXX/resourceGroups/aerserv-prod-eastus-rg/providers/Microsoft.Network/applicationGateways/production-ssui-agw/backendHttpSettingsCollection/prod-ssui-port-8080"
            name                                = "prod-ssui-port-8080"
            path                                = "/"
            pick_host_name_from_backend_address = false
            port                                = 8080
            probe_id                            = "/subscriptions/XXXX-XXXX/resourceGroups/aerserv-prod-eastus-rg/providers/Microsoft.Network/applicationGateways/production-ssui-agw/probes/prod-ssui-port-8080-login"
            probe_name                          = "prod-ssui-port-8080-login"
            protocol                            = "Http"
            request_timeout                     = 60
            trusted_root_certificate_names      = []

            connection_draining {
                drain_timeout_sec = 60
                enabled           = true
            }
        }

        frontend_ip_configuration {
            id                            = "/subscriptions/XXXX-XXXX/resourceGroups/aerserv-prod-eastus-rg/providers/Microsoft.Network/applicationGateways/production-ssui-agw/frontendIPConfigurations/prod-ssui"
            name                          = "prod-ssui"
            private_ip_address_allocation = "Dynamic"
            public_ip_address_id          = "/subscriptions/XXXX-XXXX/resourceGroups/aerserv-prod-eastus-rg/providers/Microsoft.Network/publicIPAddresses/aerserv-prod-eastus-prod-ssui-agw-pubip"
        }

        frontend_port {
            id   = "/subscriptions/XXXX-XXXX/resourceGroups/aerserv-prod-eastus-rg/providers/Microsoft.Network/applicationGateways/production-ssui-agw/frontendPorts/aerserv-prod-eastus-prod-ssui-agw-port-443"
            name = "aerserv-prod-eastus-prod-ssui-agw-port-443"
            port = 443
        }
        frontend_port {
            id   = "/subscriptions/XXXX-XXXX/resourceGroups/aerserv-prod-eastus-rg/providers/Microsoft.Network/applicationGateways/production-ssui-agw/frontendPorts/aerserv-prod-eastus-prod-ssui-agw-port-80"
            name = "aerserv-prod-eastus-prod-ssui-agw-port-80"
            port = 80
        }

        gateway_ip_configuration {
            id        = "/subscriptions/XXXX-XXXX/resourceGroups/aerserv-prod-eastus-rg/providers/Microsoft.Network/applicationGateways/production-ssui-agw/gatewayIPConfigurations/aerserv-prod-eastus-prod-ssui-agw-gw-ip"
            name      = "aerserv-prod-eastus-prod-ssui-agw-gw-ip"
            subnet_id = "/subscriptions/XXXX-XXXX/resourceGroups/aerserv-prod-eastus-rg/providers/Microsoft.Network/virtualNetworks/aerserv-prod-eastus-vnet/subnets/Production-EastUS-Production-Public-AppGateway"
        }

        http_listener {
            frontend_ip_configuration_id   = "/subscriptions/XXXX-XXXX/resourceGroups/aerserv-prod-eastus-rg/providers/Microsoft.Network/applicationGateways/production-ssui-agw/frontendIPConfigurations/prod-ssui"
            frontend_ip_configuration_name = "prod-ssui"
            frontend_port_id               = "/subscriptions/XXXX-XXXX/resourceGroups/aerserv-prod-eastus-rg/providers/Microsoft.Network/applicationGateways/production-ssui-agw/frontendPorts/aerserv-prod-eastus-prod-ssui-agw-port-443"
            frontend_port_name             = "aerserv-prod-eastus-prod-ssui-agw-port-443"
            host_names                     = []
            id                             = "/subscriptions/XXXX-XXXX/resourceGroups/aerserv-prod-eastus-rg/providers/Microsoft.Network/applicationGateways/production-ssui-agw/httpListeners/prod-ssui-port-443"
            name                           = "prod-ssui-port-443"
            protocol                       = "Https"
            require_sni                    = false
            ssl_certificate_id             = "/subscriptions/XXXX-XXXX/resourceGroups/aerserv-prod-eastus-rg/providers/Microsoft.Network/applicationGateways/production-ssui-agw/sslCertificates/aerserv-wildcard-cert-non-ecc-2019"
            ssl_certificate_name           = "aerserv-wildcard-cert-non-ecc-2019"
        }
        http_listener {
            frontend_ip_configuration_id   = "/subscriptions/XXXX-XXXX/resourceGroups/aerserv-prod-eastus-rg/providers/Microsoft.Network/applicationGateways/production-ssui-agw/frontendIPConfigurations/prod-ssui"
            frontend_ip_configuration_name = "prod-ssui"
            frontend_port_id               = "/subscriptions/XXXX-XXXX/resourceGroups/aerserv-prod-eastus-rg/providers/Microsoft.Network/applicationGateways/production-ssui-agw/frontendPorts/aerserv-prod-eastus-prod-ssui-agw-port-80"
            frontend_port_name             = "aerserv-prod-eastus-prod-ssui-agw-port-80"
            host_names                     = []
            id                             = "/subscriptions/XXXX-XXXX/resourceGroups/aerserv-prod-eastus-rg/providers/Microsoft.Network/applicationGateways/production-ssui-agw/httpListeners/prod-ssui-port-80"
            name                           = "prod-ssui-port-80"
            protocol                       = "Http"
            require_sni                    = false
        }

        probe {
            host                                      = "production-ssui-agw"
            id                                        = "/subscriptions/XXXX-XXXX/resourceGroups/aerserv-prod-eastus-rg/providers/Microsoft.Network/applicationGateways/production-ssui-agw/probes/prod-ssui-port-8080-login"
            interval                                  = 60
            minimum_servers                           = 0
            name                                      = "prod-ssui-port-8080-login"
            path                                      = "/login"
            pick_host_name_from_backend_http_settings = false
            protocol                                  = "Http"
            timeout                                   = 30
            unhealthy_threshold                       = 10

            match {
                status_code = [
                    "200-399",
                ]
            }
        }

        request_routing_rule {
            backend_address_pool_id    = "/subscriptions/XXXX-XXXX/resourceGroups/aerserv-prod-eastus-rg/providers/Microsoft.Network/applicationGateways/production-ssui-agw/backendAddressPools/prod-ssui-port-8080"
            backend_address_pool_name  = "prod-ssui-port-8080"
            backend_http_settings_id   = "/subscriptions/XXXX-XXXX/resourceGroups/aerserv-prod-eastus-rg/providers/Microsoft.Network/applicationGateways/production-ssui-agw/backendHttpSettingsCollection/prod-ssui-port-8080"
            backend_http_settings_name = "prod-ssui-port-8080"
            http_listener_id           = "/subscriptions/XXXX-XXXX/resourceGroups/aerserv-prod-eastus-rg/providers/Microsoft.Network/applicationGateways/production-ssui-agw/httpListeners/prod-ssui-port-443"
            http_listener_name         = "prod-ssui-port-443"
            id                         = "/subscriptions/XXXX-XXXX/resourceGroups/aerserv-prod-eastus-rg/providers/Microsoft.Network/applicationGateways/production-ssui-agw/requestRoutingRules/prod-ssui-443"
            name                       = "prod-ssui-443"
            rule_type                  = "Basic"
        }
        request_routing_rule {
            backend_address_pool_id    = "/subscriptions/XXXX-XXXX/resourceGroups/aerserv-prod-eastus-rg/providers/Microsoft.Network/applicationGateways/production-ssui-agw/backendAddressPools/prod-ssui-port-8080"
            backend_address_pool_name  = "prod-ssui-port-8080"
            backend_http_settings_id   = "/subscriptions/XXXX-XXXX/resourceGroups/aerserv-prod-eastus-rg/providers/Microsoft.Network/applicationGateways/production-ssui-agw/backendHttpSettingsCollection/prod-ssui-port-8080"
            backend_http_settings_name = "prod-ssui-port-8080"
            http_listener_id           = "/subscriptions/XXXX-XXXX/resourceGroups/aerserv-prod-eastus-rg/providers/Microsoft.Network/applicationGateways/production-ssui-agw/httpListeners/prod-ssui-port-80"
            http_listener_name         = "prod-ssui-port-80"
            id                         = "/subscriptions/XXXX-XXXX/resourceGroups/aerserv-prod-eastus-rg/providers/Microsoft.Network/applicationGateways/production-ssui-agw/requestRoutingRules/prod-ssui-80"
            name                       = "prod-ssui-80"
            rule_type                  = "Basic"
        }

        sku {
            capacity = 0
            name     = "WAF_v2"
            tier     = "WAF_v2"
        }

        ssl_policy {
            cipher_suites      = []
            disabled_protocols = []
            policy_name        = "AppGwSslPolicy20170401S"
            policy_type        = "Predefined"
        }

        timeouts {}

      ~ waf_configuration {
            enabled                  = true
            file_upload_limit_mb     = 100
          ~ firewall_mode            = "Prevention" -> "Detection"
            max_request_body_size_kb = 128
            request_body_check       = true
            rule_set_type            = "OWASP"
            rule_set_version         = "3.1"
        }
    }

Plan: 0 to add, 1 to change, 0 to destroy.

------------------------------------------------------------------------

Note: You didn't specify an "-out" parameter to save this plan, so Terraform
can't guarantee that exactly these actions will be performed if
"terraform apply" is subsequently run.

IM2882-M0:inmobi-eastus derek.lai$
